---
# tasks file for osp.servers

- name: Create OpenStack server instances
  os_server:
    cloud: openstack
    name: "{{ item.value.name }}"
    state: "{{ item.value.state }}"
    image: "{{ item.value.image }}"
    flavor: "{{ item.value.flavor }}"
    key_name: "{{ item.value.key_name }}" 
    security_groups: "{{ item.value.security_group }}"
    #wait: yes
    delete_fip: yes
    meta: "{{ item.value.meta }}"
    nics:
      - net-name: int_network
    userdata: |
     #!/bin/bash
     curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
     cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
  with_dict:
    "{{ osp_servers }}"
  async: 900
  poll: 0
  register: r_instances

#- name: Create OpenStack server instances
#  os_server:
#   cloud: openstack
#   name: app1 #"{{ item.value.name }}"
#   state: present #"{{ item.value.state }}"
#   image: rhel-guest  #"{{ item.value.image }}"
#   flavor: m1.medium #"{{ item.value.flavor }}"
#   key_name: ansible_ssh #"{{ item.value.key_name }}" 
#   security_groups: apps #"{{ item.value.security_group }}"
#   meta: "group: , deployment_name: QA" #"{{ item.value.meta }}"
#   nics:
#     - net-name: int_network
#   userdata: |
#    #!/bin/bash
#    curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
#    cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
#  with_dict:
#    "{{ osp_servers }}"
#  async: 900
#  poll: 0
#  register: r_instances

- name: debug r_instances
  debug:
    var: r_instances

- name: debug dict
  debug:
    msg: 
    - "{{ item.value.name }}"
    - "{{ item.value.state }}" 
    - "{{ item.value.image }}"
    - "{{ item.value.flavor }}" 
    - "{{ item.value.key_name }}"
    - "{{ item.value.security_group }}"
    - "{{ item.value.meta }}"
    verbosity: 2
  with_dict:
    "{{ osp_servers }}"

#- name: Pause for 3 minutes
#  pause:
#    minutes: 180

- name: Wait for async OSP instance creation to complete
  async_status: "jid={{ item.ansible_job_id }}"
  register: r_wait
  until: r_wait.finished
  retries: 900
  loop: "{{ r_instances.results }}"

- name: Debug instances 
  debug:
    msg: "Server is {{ __instance.__openstack_server.instance_name }}"
    verbosity: 2
  loop: "{{ r_instances.results }}"
  loop_control:
    loop_var: __instance

- name: Add floating IP to instances
  os_floating_ip:
    cloud: openstack
    state: "{{ openstack_server_state | default('present') }}"
    reuse: yes
    server: "{{ __instance.__openstack_server.instance_name }}"
    network: ext_network
    wait: true
    timeout: 180
  loop: "{{ r_instances.results }}"
  loop_control:
    loop_var: __instance
  register: r_floating_ips

- name: Wait for servers by name to be available
  wait_for:
    host: "{{ __fip.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  loop: "{{ r_floating_ips.results }}"
  loop_control:
    loop_var: __fip
  delegate_to: "{{ inventory_hostname }}"
